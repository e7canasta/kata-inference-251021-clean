[mypy]
# Mypy Configuration for Adeline
# ================================

# Python version
python_version = 3.10

# Import discovery
mypy_path = .
namespace_packages = True
explicit_package_bases = True

# Type checking strictness (gradual typing approach)
# Start with moderate strictness, increase over time
disallow_untyped_defs = False  # TODO: Enable when all critical files typed
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_calls = False

# Warnings
warn_unused_configs = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_return_any = False  # TODO: Enable later
warn_unreachable = True

# Error messages
show_error_context = True
show_column_numbers = True
show_error_codes = True
pretty = True
color_output = True

# Output
show_absolute_path = False

# Strictness per module (gradual migration)
# Critical files with full type coverage

[mypy-adeline.config.schemas]
disallow_untyped_defs = True
disallow_incomplete_defs = True
warn_return_any = True

[mypy-adeline.inference.roi.adaptive]
# Already has good type hints
disallow_incomplete_defs = True

[mypy-adeline.inference.stabilization.core]
# Already has good type hints
disallow_incomplete_defs = True

[mypy-adeline.control.registry]
# Critical path - require full typing
disallow_untyped_defs = True
disallow_incomplete_defs = True

# External dependencies (no stubs available, ignore)
[mypy-inference.*]
ignore_missing_imports = True

[mypy-supervision.*]
ignore_missing_imports = True

[mypy-cv2.*]
ignore_missing_imports = True

[mypy-paho.mqtt.*]
ignore_missing_imports = True

# Test files (less strict)
[mypy-tests.*]
disallow_untyped_defs = False
